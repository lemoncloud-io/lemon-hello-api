{
    "name": "lemon-hello-api",
    "version": "2.4.3a",
    "description": "Simple Serverless MicroService API with `Lambda` + `API Gateway` + `Web Socket` + `SNS` + `SQS` + `KMS`",
    "main": "dist/index.js",
    "types": "dist/index.d.ts",
    "port": 8888,
    "scripts": {
        "!build": "------ build /src to /dist ----",
        "build": "npm run build-ts",
        "build-ts": "ttsc",
        "watch-ts": "ttsc -w",
        "nodemon": "nodemon --config nodemon-main.json",
        "!start": "------ run in local development (note! ts-node seems not watch '.js' file) ----",
        "*start": "nodemon --watch src --exec ts-node --compiler typescript -r tsconfig-paths/register src/index.ts",
        "start": "npm run build && concurrently -k -p \"[{name}]\" -n \"TypeScript,Node\" -c \"cyan.bold,green.bold\" \"npm run watch-ts\" \"npm run nodemon\"",
        "!server": "----- run serverless local (for dev) -----",
        "server": "sls offline start --profile \"$ENV\" --stage local",
        "server-local": "npm run build && concurrently -k -p \"[{name}]\" -n \"TypeScript,Node\" -c \"cyan.bold,green.bold\" \"npm run watch-ts\" \"npm run server\"",
        "server.lemon": "ENV=lemon npm run server-local",
        "server.jober": "ENV=jober npm run server-local",
        "!express": "---- run express server in local -----",
        "express.lemon": "ENV=lemon STAGE=local npm run start",
        "express.jober": "ENV=jober STAGE=local npm run start",
        "express.ssocio": "ENV=ssocio STAGE=local npm run start",
        "express.comics": "ENV=comics STAGE=local npm run start",
        "express.colover": "ENV=colover STAGE=local npm run start",
        "express.adam": "ENV=adam STAGE=local npm run start",
        "!deploy": "----- deploy to AWS by serverless -----",
        "deploy.lemon": "npm run build && sls deploy --param='profile=lemon'  --stage dev",
        "deploy.devops": "npm run build && sls deploy --param='profile=devops'  --stage dev",
        "deploy.ian": "npm run build && sls deploy --param='profile=ian'  --stage dev",
        "deploy.lemon.prod": "npm run build && sls deploy --param='profile=lemon'  --stage prod",
        "deploy.jober": "npm run build && sls deploy --param='profile=jober' --stage prod",
        "deploy.neuro": "npm run build && sls deploy --param='profile=neuro' --stage prod",
        "deploy.ssocio": "npm run build && sls deploy --param='profile=ssocio' --stage prod",
        "deploy.comics": "npm run build && sls deploy --param='profile=comics' --stage prod",
        "deploy.adam": "npm run build && sls deploy --param='profile=adam' --stage prod",
        "deploy.colover": "npm run build && sls deploy --param='profile=colover' --stage prod",
        "!info": "------- print sls infor by profile -----",
        "info": "sls info --stage prod",
        "info.lemon": "sls info --param='profile=lemon'  --stage prod",
        "info.neuro": "sls info --param='profile=neuro' --stage prod",
        "info.ssocio": "sls info --param='profile=ssocio' --stage prod",
        "info.comics": "sls info --param='profile=comics' --stage prod",
        "info.adam": "sls info --param='profile=adam' --stage prod",
        "info.colover": "sls info --param='profile=colover' --stage prod",
        "!pack": "------- build gulp and prepare to release -----",
        "pack.lemon": "npm run build && sls package --param='profile=lemon'  --stage prod",
        "!logs": "------- print logs of serverless by profile -----",
        "logs": "sls logs --stage prod -t --startTime 5m -f hello",
        "logs.lemon": "sls logs --param='profile=lemon'  --stage dev -t --startTime 5m -f lambda",
        "logs.neuro": "sls logs --param='profile=neuro'  --stage prod -t --startTime 5m -f lambda",
        "logs.ssocio": "sls logs --param='profile=ssocio'  --stage prod -t --startTime 5m -f backend",
        "logs.comics": "sls logs --param='profile=comics'  --stage prod -t --startTime 5m -f backend",
        "logs.colover": "sls logs --param='profile=colover'  --stage prod -t --startTime 5m -f backend",
        "logs.lemon.prod": "sls logs --param='profile=lemon'  --stage prod -t --startTime 5m -f backend",
        "!remove": "----- sls remove by profile -----",
        "remove": "sls remove --stage prod",
        "remove.lemon": "sls remove --param='profile=lemon'  --stage prod",
        "!test": "------- run self-test with jest -----",
        "test": "LS=1 jest --config=jest.config.json",
        "test:dev": "LS=1 jest --config=jest.config.json --watchAll",
        "test:watch": "LS=1 jest --config=jest.config.json --watchAll",
        "test:watch.ssocio": "ENV=ssocio npm run test:watch",
        "test.lemon": "ENV=lemon STAGE=local npm test",
        "!plato": "----- analysis code complexity -----",
        "plato": "plato -r -d complexity dist",
        "eureka-dependencies": "npm ci --only=prod && npm install typescript@4.6.4 ttypescript@1.5.15 tsconfig-paths@4.1.2 ts-transformer-keys@0.4.3"
    },
    "dependencies": {
        "lemon-core": "^3.2.7"
    },
    "devDependencies": {
        "@cruglobal/serverless-merge-config": "^1.1.0",
        "@lemoncloud/lemon-accounts-api": "^2.15.2",
        "@types/cors": "^2.8.7",
        "@types/jest": "^27.5.0",
        "@types/request": "^2.48.5",
        "@types/supertest": "^2.0.10",
        "@types/uuid": "^8.3.0",
        "@typescript-eslint/eslint-plugin": "^5.22.0",
        "@typescript-eslint/parser": "^5.22.0",
        "codecov": "^3.7.2",
        "concurrently": "^5.3.0",
        "eslint": "^8.14.0",
        "eslint-config-prettier": "^8.5.0",
        "eslint-plugin-prettier": "^4.0.0",
        "jest": "^27.5.1",
        "lint-staged": "^13.1.0",
        "nodemon": "^2.0.20",
        "prettier": "^2.6.2",
        "serverless": "^3.16.0",
        "serverless-aws-documentation": "^0.8.0",
        "serverless-offline": "^12.0.4",
        "serverless-prune-plugin": "^2.0.1",
        "superagent": "^5.3.1",
        "supertest": "^4.0.2",
        "ts-jest": "^27.1.4",
        "ts-node": "8.1.0",
        "typedoc": "^0.22.15"
    },
    "private": false,
    "author": "Steve Jung <steve@lemoncloud.io> (https://lemoncloud.io)",
    "license": "MIT",
    "files": [
        "handler.js",
        "dist/**/*"
    ],
    "engines": {
        "node": ">=16.17.0"
    },
    "keywords": [
        "lemoncloud",
        "serverless",
        "lemon-core"
    ],
    "bugs": {
        "url": "https://github.com/lemoncloud-io/lemon-hello-api/issues",
        "email": "steve@lemoncloud.io"
    },
    "contributors": [
        "Louis <louis@lemoncloud.io>"
    ],
    "homepage": "https://github.com/lemoncloud-io/lemon-hello-api#readme",
    "repository": {
        "type": "git",
        "url": "git@github.com:lemoncloud-io/lemon-hello-api.git"
    }
}
